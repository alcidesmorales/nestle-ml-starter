name: Continuous Integration

permissions: read-all

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master, develoment]

jobs:
  lints:
    name: Run linters
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      packages: write
      deployments: write
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Cache pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-3|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit
        run: pip3 install pre-commit

      - name: Run pre-commit checks
        run: pre-commit run --all-files --show-diff-on-failure --color always

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          ignore-unfixed: true
          exit-code: 0 # change if you want to fail build on vulnerabilities
          severity: "CRITICAL,HIGH,MEDIUM"
          format: "table"
          output: "trivy-scanning-results.txt"

      - name: Format trivy message
        run: |
          echo "Trivy scanning results." >> trivy.txt
          cat trivy-scanning-results.txt >> trivy.txt

      - name: Add trivy report to PR
        uses: thollander/actions-comment-pull-request@v2
        continue-on-error: true
        if: ${{ github.event_name == 'pull_request' }}
        with:
          filePath: trivy.txt
          reactions: ""
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          comment_tag: trivy

      - name: Create venv
        run: . ./setup_dev_env.sh

      - name: Check licenses
        run: ./check_licenses.sh

      - name: Generate pip freeze
        run: |
          source venv/bin/activate
          pip freeze > requirements-freeze.txt

      - name: Publish Artefacts
        uses: actions/upload-artifact@v3
        if: always()
        continue-on-error: true
        with:
          name: results
          path: |
            requirements-freeze.txt
            licenses.txt
            trivy-scanning-results.txt
          retention-days: 30

      - name: Publish Test Report
        uses: actions/upload-artifact@v3
        if: always()
        continue-on-error: true
        with:
          name: test-report
          path: report.xml
          retention-days: 10

      - name: Validate package build
        run: |
          source venv/bin/activate
          python -m pip install -U build
          python -m build

      - name: Publish Package
        uses: actions/upload-artifact@v3
        continue-on-error: true
        if: success()
        with:
          name: packages
          path: dist/**
          retention-days: 3

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      checks: write
      pull-requests: write
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.9"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}-${{ hashFiles('**/setup.cfg') }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: pip install -r requirements-dev.txt

      - name: Run Tests With Coverage
        run: |
          # run with coverage to not execute tests twice
          coverage run -m pytest -v -p no:warnings --junitxml=report.xml tests/
          coverage report
          coverage xml

      - name: Test Report
        uses: mikepenz/action-junit-report@v4
        continue-on-error: true
        if: always()
        with:
          report_paths: 'report.xml'

      - name: Publish Test Report
        uses: actions/upload-artifact@v3
        continue-on-error: true
        if: always()
        with:
          name: test-report
          path: report.xml
          retention-days: 10

      - name: Produce the coverage report
        uses: insightsengineering/coverage-action@v2
        continue-on-error: true
        with:
          path: coverage.xml
          threshold: 60
          fail: false
          publish: true
          diff: true
          diff-branch: ${{ github.event.repository.default_branch }}
          togglable-report: true
          diff-storage: _xml_coverage_reports
          coverage-summary-title: "Code Coverage Summary"